/*
 * Copyright 2020 Peter Kenji Yamanaka
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"

//noinspection GroovyMissingReturnStatement
android {
    compileSdkVersion rootProject.ext.maxSdk

    //noinspection GroovyMissingReturnStatement
    defaultConfig {
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.maxSdk

        resConfigs "en"

        manifestPlaceholders = [
                TIINGO_API_KEY: TIINGO_API_KEY
        ]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        viewBinding true
        buildConfig false
    }
}

// Kapt flags
kapt {
    correctErrorTypes = true
    useBuildCache = true
    mapDiagnosticLocations = true

    javacOptions {
        option("-Xlint:unchecked")
        option("-Xlint:deprecation")
        option("-Xmaxerrs", 10000)
    }
}

dependencies {

    kapt "com.google.dagger:dagger-compiler:$dagger"

    // Moshi
    implementation "com.squareup.moshi:moshi:$moshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"

    // API for Dagger
    api "com.tinder.scarlet:scarlet:$scarlet"
    implementation "com.tinder.scarlet:websocket-okhttp:$scarlet"
    implementation "com.tinder.scarlet:lifecycle-android:$scarlet"
    implementation "com.tinder.scarlet:stream-adapter-coroutines:$scarlet"
    implementation("com.tinder.scarlet:message-adapter-moshi:$scarlet") {
        // Stop complaining about duplicate kotlin-reflect
        exclude group: "org.jetbrains.kotlin"
    }

    api project(':finance')
}
